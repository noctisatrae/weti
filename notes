```toml
[job_handler]
limit = 50
rtime = 1000

[logger]
debug = true
```

```toml
# example of .env config
# prefixed to not polute env space
WETI_API_TOKEN=helloworld
WETI_API_PORT=8000
WETI_DB_PASSWORD=jesuisunecarotte
WETI_DB_URL=postgres://postgres:jesuisunecarotte@db:5432/postgres

# format: PROVIDER_CHAINID = "url of the endpoint"
# those misconfiguration should be logged at the WARN level
MORALIS_1 = ""
ALCHEMY_144 = ""
```

(to_timestamp(${Date.now()} / 1000.0)

~~commit where I have a clean project: abe3210~~

might change bigserial to smallsmerial as we don't need 2^{53} id + we clean them up regularly
> the above sentence turns out to be very dangerous and false!
> actually we want to have as many room as we can because ID don't reset when we delete!
> if we use a job id as the pointing reference towards the data used in the front-end and two jobs share the same ID it's soooo stupid

https://developers.moralis.com/full-tutorial-how-to-get-wallet-transactions-using-rpc-nodes/ => can also do that on alchemy => those are called extended RPC methods

https://www.infura.io/blog/post/ethereum-rpcs-methods => Infura doesn't have them but provide so many chains so we cool w/ them

```
   ____     _       ____      ____     __   __       U  ___ u  _   _     
U /"___|U  /"\  uU |  _"\ uU |  _"\ u  \ \ / /        \/"_ \/ | \ |"|    
\| | u   \/ _ \/  \| |_) |/ \| |_) |/   \ V /         | | | |<|  \| |>   
 | |/__  / ___ \   |  _ <    |  _ <    U_|"|_u    .-,_| |_| |U| |\  |u   
  \____|/_/   \_\  |_| \_\   |_| \_\     |_|       \_)-\___/  |_| \_|    
 _// \\  \\    >>  //   \\_  //   \\_.-,//|(_           \\    ||   \\,-. 
(__)(__)(__)  (__)(__)  (__)(__)  (__)\_) (__)         (__)   (_")  (_/  
```